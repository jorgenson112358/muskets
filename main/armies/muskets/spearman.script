targetPosition = nil

function init(self)
	msg.post(".", "acquire_input_focus")

	self.speed = 120
	self.animation = nil
	self.faceLeft = true
	self.attacking = false
	self.attack_anim = nil
end

function final(self)
	msg.post(".", "release_input_focus")
end

local function move_done(self)
	self.targetPosition = nil
end

local function attack_done (self)
	self.attacking = false
end

function update(self, dt)
	sprite.set_hflip("#sprite", self.faceLeft)

	local anim = hash("idle")
	if self.targetPosition ~= nil then
		local currentPosition = go.get_position()
		local distance = vmath.length(self.targetPosition - currentPosition)
		local duration = distance / self.speed
		go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, self.targetPosition, go.EASING_LINEAR, duration, 0, move_done)
		anim = hash("run")
	end

	if self.attacking == false and self.animation ~= anim then
		self.animation = anim
		msg.post("#sprite", "play_animation", { id = anim})
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		self.targetPosition = vmath.vector3(action.x, action.y, go.get_position().z)
		local temp = self.targetPosition - go.get_position()
		if temp.x < 0 then
			self.faceLeft = true
		else
			self.faceLeft = false
		end
	elseif (action_id == hash("attack1") or action_id == hash("attack2") or action_id == hash("attack3") ) and action.pressed then
		if self.attacking == false and self.animation ~= action_id then
			self.attacking = true
			self.animation = action_id
			sprite.play_flipbook("#sprite", action_id, attack_done)
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
